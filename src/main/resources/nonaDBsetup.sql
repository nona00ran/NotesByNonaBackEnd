CREATE SCHEMA IF NOT EXISTS NBN;
SET SCHEMA NBN;

-- === User Management Tables ===

CREATE TABLE IF NOT EXISTS NBN.users (
    user_id     INT8         NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    password    VARCHAR(255) NOT NULL,
    username    VARCHAR(32)  NOT NULL,
    email       VARCHAR(255) NOT NULL,
    first_name  VARCHAR(64)  NOT NULL,
    last_name   VARCHAR(64)  NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (user_id ASC),
    UNIQUE INDEX user_index (username ASC),
    UNIQUE INDEX user_email_index (email ASC)
);

CREATE TABLE IF NOT EXISTS NBN.roles (
    role_id   INT8         NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    role_name VARCHAR(32)  UNIQUE NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (role_id ASC),
    UNIQUE INDEX roles_index (role_name ASC)
);

CREATE TABLE IF NOT EXISTS NBN.user_roles (
    user_id INT8 NOT NULL,
    role_id INT8 NOT NULL,
    CONSTRAINT user_roles_pkey PRIMARY KEY (user_id ASC, role_id ASC),
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES NBN.users (user_id),
    CONSTRAINT fk_role FOREIGN KEY (role_id) REFERENCES NBN.roles (role_id)
);

CREATE TABLE IF NOT EXISTS NBN.refresh_tokens (
    token_id    INT8         NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    expiry_date TIMESTAMP    NOT NULL,
    token       VARCHAR(255) NOT NULL,
    user_id     INT8         NOT NULL,
    CONSTRAINT refresh_tokens_pkey PRIMARY KEY (token_id ASC),
    CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES NBN.users (user_id),
    UNIQUE INDEX refresh_tokens_index (token ASC)
);

-- === Perfume Reference Tables ===

CREATE TABLE IF NOT EXISTS NBN.perfume_brands (
    brand_id   INT8         NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    brand_name VARCHAR(64)  UNIQUE NOT NULL,
    CONSTRAINT perfume_brands_pkey PRIMARY KEY (brand_id ASC),
    UNIQUE INDEX perfume_brands_index (brand_name ASC)
);

CREATE TABLE IF NOT EXISTS NBN.perfume_genders (
    gender_id   INT8        NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    gender_name VARCHAR(32) UNIQUE NOT NULL,
    CONSTRAINT perfume_genders_pkey PRIMARY KEY (gender_id ASC),
    UNIQUE INDEX perfume_genders_index (gender_name ASC)
);

CREATE TABLE IF NOT EXISTS NBN.perfume_notes (
    note_id   INT8         NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    note_name VARCHAR(64)  UNIQUE NOT NULL,
    CONSTRAINT perfume_notes_pkey PRIMARY KEY (note_id ASC),
    UNIQUE INDEX perfume_notes_index (note_name ASC)
);

-- === Main Perfume Table ===

CREATE TABLE IF NOT EXISTS NBN.perfumes (
    perfume_id   INT8         NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    perfume_name VARCHAR(128) NOT NULL,
    price        INT8         NULL,
    brand_id     INT8         NOT NULL,
    gender_id    INT8         NOT NULL,
    CONSTRAINT perfumes_pkey PRIMARY KEY (perfume_id ASC),
    CONSTRAINT fk_perfume_brand FOREIGN KEY (brand_id) REFERENCES NBN.perfume_brands (brand_id),
    CONSTRAINT fk_perfume_gender FOREIGN KEY (gender_id) REFERENCES NBN.perfume_genders (gender_id),
    UNIQUE INDEX perfume_name_index (perfume_name ASC)
);

-- === Perfume Notes Tables ===

CREATE TABLE IF NOT EXISTS NBN.base_notes (
    perfume_id INT8 NOT NULL,
    note_id    INT8 NOT NULL,
    CONSTRAINT base_notes_pkey PRIMARY KEY (perfume_id ASC, note_id ASC),
    CONSTRAINT fk_base_perfume FOREIGN KEY (perfume_id) REFERENCES NBN.perfumes (perfume_id),
    CONSTRAINT fk_base_note FOREIGN KEY (note_id) REFERENCES NBN.perfume_notes (note_id)
);

CREATE TABLE IF NOT EXISTS NBN.middle_notes (
    perfume_id INT8 NOT NULL,
    note_id    INT8 NOT NULL,
    CONSTRAINT middle_notes_pkey PRIMARY KEY (perfume_id ASC, note_id ASC),
    CONSTRAINT fk_middle_perfume FOREIGN KEY (perfume_id) REFERENCES NBN.perfumes (perfume_id),
    CONSTRAINT fk_middle_note FOREIGN KEY (note_id) REFERENCES NBN.perfume_notes (note_id)
);

CREATE TABLE IF NOT EXISTS NBN.top_notes (
    perfume_id INT8 NOT NULL,
    note_id    INT8 NOT NULL,
    CONSTRAINT top_notes_pkey PRIMARY KEY (perfume_id ASC, note_id ASC),
    CONSTRAINT fk_top_perfume FOREIGN KEY (perfume_id) REFERENCES NBN.perfumes (perfume_id),
    CONSTRAINT fk_top_note FOREIGN KEY (note_id) REFERENCES NBN.perfume_notes (note_id)
);

-- === Reviews ===

CREATE TABLE IF NOT EXISTS NBN.reviews (
    review_id  INT8         NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    comment    TEXT         NULL,
    rating     INT4         NULL,
    perfume_id INT8         NOT NULL,
    user_id    INT8         NOT NULL,
    CONSTRAINT reviews_pkey PRIMARY KEY (review_id ASC),
    CONSTRAINT fk_review_perfume FOREIGN KEY (perfume_id) REFERENCES NBN.perfumes (perfume_id),
    CONSTRAINT fk_review_user FOREIGN KEY (user_id) REFERENCES NBN.users (user_id)
);